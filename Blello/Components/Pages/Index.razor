@page "/"
@using Blello.Model
<!-- Masthead -->
<header class="masthead">

    <div class="boards-menu">

        <button class="boards-btn btn"><i class="fab fa-trello boards-btn-icon"></i>Boards</button>

        <div class="board-search">
            <input type="search" class="board-search-input" aria-label="Board Search">
            <i class="fas fa-search search-icon" aria-hidden="true"></i>
        </div>

    </div>

    <div class="logo">

        <h1><i class="fab fa-trello logo-icon" aria-hidden="true"></i>Blello</h1>

    </div>

    <div class="user-settings">

        <button class="user-settings-btn btn" aria-label="Create">
            <i class="fas fa-plus" aria-hidden="true"></i>
        </button>

        <button class="user-settings-btn btn" aria-label="Information">
            <i class="fas fa-info-circle" aria-hidden="true"></i>
        </button>

        <button class="user-settings-btn btn" aria-label="Notifications">
            <i class="fas fa-bell" aria-hidden="true"></i>
        </button>

        <button class="user-settings-btn btn" aria-label="User Settings">
            <i class="fas fa-user-circle" aria-hidden="true"></i>
        </button>

    </div>

</header>
<!-- End of masthead -->
<!-- Board info bar -->
<section class="board-info-bar">

    <div class="board-controls">

        <button class="board-title btn">
            <h2>Web Development</h2>
        </button>

        <button class="star-btn btn" aria-label="Star Board">
            <i class="far fa-star" aria-hidden="true"></i>
        </button>

        <button class="personal-btn btn">Personal</button>

        <button class="private-btn btn"><i class="fas fa-briefcase private-btn-icon" aria-hidden="true"></i>Private</button>

    </div>

    <button class="menu-btn btn"><i class="fas fa-ellipsis-h menu-btn-icon" aria-hidden="true"></i>Show Menu</button>

</section>
<!-- End of board info bar -->
<!-- Lists container -->
<section class="lists-container">

    <div class="list">

        <h3 class="list-title">Tasks to Do</h3>

        <ul class="list-items">
            @foreach (var item in boardItems.Where(b => b.BoardId == 1))
            {
                <Draggable ID="@item.ItemID" IsDragItem=@(item.Equals(DragItem)) DragItemClass="drag-item" DragType="move" DropType="move" DropTargetClass="droptarget" Debug="true" DataItem=@item OnDragStart=@OnDragStart OnDragEnd=@OnDragEnd OnDragDrop=@OnDropItem OnDragEnter=@OnDragEnter OnDragLeave=@OnDragLeave><DragContent Context="dragctx"><li>@dragctx.Content</li></DragContent></Draggable>
            }
        </ul>

        <button class="add-card-btn btn">Add a card</button>

    </div>

    <div class="list">

        <h3 class="list-title">Completed Tasks</h3>

        <ul class="list-items">
            @foreach (var item in boardItems.Where(b => b.BoardId == 2))
            {
                <Draggable ID="@item.ItemID" IsDragItem=@(item.Equals(DragItem)) DragItemClass="drag-item" DragType="move" DropType="move" DropTargetClass="droptarget" Debug="true" DataItem=@item OnDragStart=@OnDragStart OnDragEnd=@OnDragEnd OnDragDrop=@OnDropItem OnDragEnter=@OnDragEnter OnDragLeave=@OnDragLeave><DragContent Context="dragctx"><li>@dragctx.Content</li></DragContent></Draggable>
            }
        </ul>

        <button class="add-card-btn btn">Add a card</button>

    </div>

    <div class="list">

        <h3 class="list-title">Topics/Concepts to Revise</h3>

        <ul class="list-items">
            @foreach (var item in boardItems.Where(b => b.BoardId == 3))
            {
                <Draggable ID="@item.ItemID" IsDragItem=@(item.Equals(DragItem)) DragItemClass="drag-item" DragType="move" DropType="move" DropTargetClass="droptarget" Debug="true" DataItem=@item OnDragStart=@OnDragStart OnDragEnd=@OnDragEnd OnDragDrop=@OnDropItem OnDragEnter=@OnDragEnter OnDragLeave=@OnDragLeave><DragContent Context="dragctx"><li>@dragctx.Content</li></DragContent></Draggable>
            }
        </ul>

        <button class="add-card-btn btn">Add a card</button>

    </div>

    <div class="list">

        <h3 class="list-title">Topics/Concepts to Learn</h3>

        <ul class="list-items">
            @foreach (var item in boardItems.Where(b => b.BoardId == 4))
            {
                <Draggable ID="@item.ItemID" IsDragItem=@(item.Equals(DragItem)) DragItemClass="drag-item" DragType="move" DropType="move" DropTargetClass="droptarget" Debug="true" DataItem=@item OnDragStart=@OnDragStart OnDragEnd=@OnDragEnd OnDragDrop=@OnDropItem OnDragEnter=@OnDragEnter OnDragLeave=@OnDragLeave><DragContent Context="dragctx"><li>@dragctx.Content</li></DragContent></Draggable>
            }
        </ul>

        <button class="add-card-btn btn">Add a card</button>

    </div>

    <div class="list">

        <h3 class="list-title">Useful Websites for Learning</h3>

        <ul class="list-items">
            @foreach (var item in boardItems.Where(b => b.BoardId == 5))
            {
                <Draggable ID="@item.ItemID" IsDragItem=@(item.Equals(DragItem)) DragItemClass="drag-item" DragType="move" DropType="move" DropTargetClass="droptarget" Debug="true" DataItem=@item OnDragStart=@OnDragStart OnDragEnd=@OnDragEnd OnDragDrop=@OnDropItem OnDragEnter=@OnDragEnter OnDragLeave=@OnDragLeave><DragContent Context="dragctx"><li>@dragctx.Content</li></DragContent></Draggable>
            }
        </ul>

        <button class="add-card-btn btn">Add a card</button>

    </div>

    <div class="list">

        <h3 class="list-title">Web Dev YouTube Channels</h3>

        <ul class="list-items">
            @foreach (var item in boardItems.Where(b => b.BoardId == 6))
            {
                <Draggable ID="@item.ItemID" IsDragItem=@(item.Equals(DragItem)) DragItemClass="drag-item" DragType="move" DropType="move" DropTargetClass="droptarget" Debug="true" DataItem=@item OnDragStart=@OnDragStart OnDragEnd=@OnDragEnd OnDragDrop=@OnDropItem OnDragEnter=@OnDragEnter OnDragLeave=@OnDragLeave><DragContent Context="dragctx"><li>@dragctx.Content</li></DragContent></Draggable>
            }
        </ul>

        <button class="add-card-btn btn">Add a card</button>

    </div>

    <div class="list">

        <h3 class="list-title">CodePen Ideas</h3>

        <ul class="list-items">
            @foreach (var item in boardItems.Where(b => b.BoardId == 7))
            {
                <Draggable ID="@item.ItemID" IsDragItem=@(item.Equals(DragItem)) DragItemClass="drag-item" DragType="move" DropType="move" DropTargetClass="droptarget" Debug="true" DataItem=@item OnDragStart=@OnDragStart OnDragEnd=@OnDragEnd OnDragDrop=@OnDropItem OnDragEnter=@OnDragEnter OnDragLeave=@OnDragLeave><DragContent Context="dragctx"><li>@dragctx.Content</li></DragContent></Draggable>
            }
        </ul>

        <button class="add-card-btn btn">Add a card</button>

    </div>

    <div class="list">

        <h3 class="list-title">Practise Website Ideas</h3>

        <ul class="list-items">
            @foreach (var item in boardItems.Where(b => b.BoardId == 8))
            {
                <Draggable ID="@item.ItemID" IsDragItem=@(item.Equals(DragItem)) DragItemClass="drag-item" DragType="move" DropType="move" DropTargetClass="droptarget" Debug="true" DataItem=@item OnDragStart=@OnDragStart OnDragEnd=@OnDragEnd OnDragDrop=@OnDropItem OnDragEnter=@OnDragEnter OnDragLeave=@OnDragLeave><DragContent Context="dragctx"><li>@dragctx.Content</li></DragContent></Draggable>
            }
        </ul>

        <button class="add-card-btn btn">Add a card</button>

    </div>

    <div class="list">

        <h3 class="list-title">JavaScript Project Ideas</h3>

        <ul class="list-items">
            @foreach (var item in boardItems.Where(b => b.BoardId == 9))
            {
                <Draggable ID="@item.ItemID" IsDragItem=@(item.Equals(DragItem)) DragItemClass="drag-item" DragType="move" DropType="move" DropTargetClass="droptarget" Debug="true" DataItem=@item OnDragStart=@OnDragStart OnDragEnd=@OnDragEnd OnDragDrop=@OnDropItem OnDragEnter=@OnDragEnter OnDragLeave=@OnDragLeave><DragContent Context="dragctx"><li>@dragctx.Content</li></DragContent></Draggable>
            }
        </ul>

        <button class="add-card-btn btn">Add a card</button>

    </div>

    <button class="add-list-btn btn">Add a list</button>

</section>
<!-- End of lists container -->

@functions
{
    void OnDragStart(UIDragEventArgs args, BoardItem Data)
    {
        Console.WriteLine($"Start {Data.Content} ");
        DragItem = Data;
        DragIndex = boardItems.IndexOf(DragItem);
        StateHasChanged();
    }

    void OnDragEnter(UIDragEventArgs args, BoardItem Data)
    {
        Console.WriteLine($"Enter {Data.Content} ");
        if (Data.Equals(DragItem))
        {
            return;
        }
        TargetItem = Data;
        int dragIndex = boardItems.IndexOf(DragItem);
        int targetIndex = boardItems.IndexOf(TargetItem);
        boardItems.Remove(DragItem);
        if (TargetItem.BoardId == DragItem.BoardId)
        {
            boardItems.Insert(targetIndex, DragItem);
        }
        else
        {
            boardItems.Insert(targetIndex-1, DragItem);
        }
        DragItem.BoardId = TargetItem.BoardId;
        StateHasChanged();
    }

    void OnDragEnd(UIDragEventArgs args, BoardItem Data)
    {
        Console.WriteLine($"End {Data.Content} ");
        DragItem = null;
        StateHasChanged();
    }

    void OnDragLeave(UIDragEventArgs args, BoardItem Data)
    {
        Console.WriteLine($"Leave {Data.Content} ");
        StateHasChanged();
    }

    void OnDropItem(UIDragEventArgs args, BoardItem Data)
    {
        Console.WriteLine($"Drop {Data.Content}");
        DragItem = null;
        StateHasChanged();
    }

    int DragIndex;
    BoardItem DragItem;
    BoardItem TargetItem;
    List<BoardItem> boardItems;
    protected override void OnInit()
    {
        base.OnInit();
        boardItems = BoardItem.SampleData();

    }
    //
}